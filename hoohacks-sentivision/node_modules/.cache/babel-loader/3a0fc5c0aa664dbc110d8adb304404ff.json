{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Kesavasai Virinchi\\\\Desktop\\\\cloned-stuff\\\\sentivision\\\\hoohacks-sentivision\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kesavasai Virinchi\\\\Desktop\\\\cloned-stuff\\\\sentivision\\\\hoohacks-sentivision\\\\src\\\\components\\\\VideoPlayerCard.js\";\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport VideoPlayer from './VideoPlayer';\nimport CardOverlay from './CardOverlay';\nimport FileUpload from './FileUpload';\nfunction VideoPlayerCard(props) {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    displayConditional = _useState2[0],\n    setDisplayConditional = _useState2[1];\n  var _useState3 = useState(props.autoplayControl),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loadVideo = _useState4[0],\n    setLoadVideo = _useState4[1];\n  var pull_data = function pull_data(data) {\n    console.log('Video Player Card: ' + data);\n    props.func(data);\n  };\n  var pull_MOV_path = function pull_MOV_path(data) {\n    console.log('MOV path: ' + data);\n    props.func2(data);\n  };\n  useEffect(function () {\n    console.log('Rerender component based on ' + props.autoplayControl);\n  }, [props.autoplayControl]);\n  return displayConditional ? /*#__PURE__*/React.createElement(CardOverlay, {\n    render: /*#__PURE__*/React.createElement(FileUpload, {\n      func: pull_data,\n      func2: pull_MOV_path,\n      loadVideo: props.autoplayControl,\n      width: 400,\n      height: 300,\n      style: {\n        borderTopLeftRadius: '26px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(VideoPlayer, {\n    outputFile: props.outputFile,\n    autoplayControl: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n}\nexport default VideoPlayerCard;","map":{"version":3,"names":["React","useEffect","useState","axios","VideoPlayer","CardOverlay","FileUpload","VideoPlayerCard","props","_useState","_useState2","_slicedToArray","displayConditional","setDisplayConditional","_useState3","autoplayControl","_useState4","loadVideo","setLoadVideo","pull_data","data","console","log","func","pull_MOV_path","func2","createElement","render","width","height","style","borderTopLeftRadius","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","outputFile"],"sources":["C:/Users/Kesavasai Virinchi/Desktop/cloned-stuff/sentivision/hoohacks-sentivision/src/components/VideoPlayerCard.js"],"sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport VideoPlayer from './VideoPlayer'\nimport CardOverlay from './CardOverlay'\nimport FileUpload from './FileUpload'\n\nfunction VideoPlayerCard (props) {\n  const [displayConditional, setDisplayConditional] = useState(true)\n  const [loadVideo, setLoadVideo] = useState(props.autoplayControl)\n\n  const pull_data = data => {\n    console.log('Video Player Card: ' + data)\n    props.func(data)\n  }\n\n  const pull_MOV_path = data => {\n    console.log('MOV path: ' + data)\n    props.func2(data)\n  }\n\n  useEffect(() => {\n    console.log('Rerender component based on ' + props.autoplayControl)\n  }, [props.autoplayControl])\n\n  return displayConditional ? (\n    <CardOverlay\n      render={\n        <FileUpload\n          func={pull_data}\n          func2={pull_MOV_path}\n          loadVideo={props.autoplayControl}\n          width={400}\n          height={300}\n          style={{ borderTopLeftRadius: '26px' }}\n        />\n      }\n    />\n  ) : (\n    <VideoPlayer outputFile={props.outputFile} autoplayControl={true} />\n  )\n}\n\nexport default VideoPlayerCard\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,cAAc;AAErC,SAASC,eAAeA,CAAEC,KAAK,EAAE;EAAA,IAAAC,SAAA,GACqBP,QAAQ,CAAC,IAAI,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3DG,kBAAkB,GAAAF,UAAA;IAAEG,qBAAqB,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACdZ,QAAQ,CAACM,KAAK,CAACO,eAAe,CAAC;IAAAC,UAAA,GAAAL,cAAA,CAAAG,UAAA;IAA1DG,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,SAAS,GAAG,SAAZA,SAASA,CAAGC,IAAI,EAAI;IACxBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGF,IAAI,CAAC;IACzCZ,KAAK,CAACe,IAAI,CAACH,IAAI,CAAC;EAClB,CAAC;EAED,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAGJ,IAAI,EAAI;IAC5BC,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGF,IAAI,CAAC;IAChCZ,KAAK,CAACiB,KAAK,CAACL,IAAI,CAAC;EACnB,CAAC;EAEDnB,SAAS,CAAC,YAAM;IACdoB,OAAO,CAACC,GAAG,CAAC,8BAA8B,GAAGd,KAAK,CAACO,eAAe,CAAC;EACrE,CAAC,EAAE,CAACP,KAAK,CAACO,eAAe,CAAC,CAAC;EAE3B,OAAOH,kBAAkB,gBACvBZ,KAAA,CAAA0B,aAAA,CAACrB,WAAW;IACVsB,MAAM,eACJ3B,KAAA,CAAA0B,aAAA,CAACpB,UAAU;MACTiB,IAAI,EAAEJ,SAAU;MAChBM,KAAK,EAAED,aAAc;MACrBP,SAAS,EAAET,KAAK,CAACO,eAAgB;MACjCa,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZC,KAAK,EAAE;QAAEC,mBAAmB,EAAE;MAAO,CAAE;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAE1C;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACD,gBAEFrC,KAAA,CAAA0B,aAAA,CAACtB,WAAW;IAACkC,UAAU,EAAE9B,KAAK,CAAC8B,UAAW;IAACvB,eAAe,EAAE,IAAK;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAClE;AACH;AAEA,eAAe9B,eAAe"},"metadata":{},"sourceType":"module"}